/* soapRecordingBindingService.h
   Generated by gSOAP 2.7.17 from onvif.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapRecordingBindingService_H
#define soapRecordingBindingService_H
#include "soapH.h"
class SOAP_CMAC RecordingBindingService : public soap
{ public:
	/// Constructor
	RecordingBindingService();
	/// Constructor with copy of another engine state
	RecordingBindingService(const struct soap&);
	/// Constructor with engine input+output mode control
	RecordingBindingService(soap_mode iomode);
	/// Constructor with engine input and output mode control
	RecordingBindingService(soap_mode imode, soap_mode omode);
	/// Destructor, also frees all deserialized data
	virtual ~RecordingBindingService();
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Initializer used by constructor
	virtual	void RecordingBindingService_init(soap_mode imode, soap_mode omode);
	/// Create a copy
	virtual	RecordingBindingService *copy();
	/// Force close connection (normally automatic)
	virtual	int soap_close_socket();
	/// Return sender-related fault to sender
	virtual	int soap_senderfault(const char *string, const char *detailXML);
	/// Return sender-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Return receiver-related fault to sender
	virtual	int soap_receiverfault(const char *string, const char *detailXML);
	/// Return receiver-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct _wsse__Security *wsse__Security, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Run simple single-thread iterative service on port until a connection error occurs (returns error code or SOAP_OK), use this->bind_flag = SO_REUSEADDR to rebind for a rerun
	virtual	int run(int port);
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog);
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept();
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve();
	/// Used by serve() to dispatch a request (returns error code or SOAP_OK)
	virtual	int dispatch();

	///
	/// Service operations (you should define these):
	///

	/// Web service operation 'GetServiceCapabilities' (returns error code or SOAP_OK)
	virtual	int GetServiceCapabilities(_trc__GetServiceCapabilities *trc__GetServiceCapabilities, _trc__GetServiceCapabilitiesResponse *trc__GetServiceCapabilitiesResponse){return SOAP_OK;};

	/// Web service operation 'CreateRecording' (returns error code or SOAP_OK)
	virtual	int CreateRecording(_trc__CreateRecording *trc__CreateRecording, _trc__CreateRecordingResponse *trc__CreateRecordingResponse){return SOAP_OK;};

	/// Web service operation 'DeleteRecording' (returns error code or SOAP_OK)
	virtual	int DeleteRecording(_trc__DeleteRecording *trc__DeleteRecording, _trc__DeleteRecordingResponse *trc__DeleteRecordingResponse){return SOAP_OK;};

	/// Web service operation 'GetRecordings' (returns error code or SOAP_OK)
	virtual	int GetRecordings(_trc__GetRecordings *trc__GetRecordings, _trc__GetRecordingsResponse *trc__GetRecordingsResponse){return SOAP_OK;};

	/// Web service operation 'SetRecordingConfiguration' (returns error code or SOAP_OK)
	virtual	int SetRecordingConfiguration(_trc__SetRecordingConfiguration *trc__SetRecordingConfiguration, _trc__SetRecordingConfigurationResponse *trc__SetRecordingConfigurationResponse){return SOAP_OK;};

	/// Web service operation 'GetRecordingConfiguration' (returns error code or SOAP_OK)
	virtual	int GetRecordingConfiguration(_trc__GetRecordingConfiguration *trc__GetRecordingConfiguration, _trc__GetRecordingConfigurationResponse *trc__GetRecordingConfigurationResponse){return SOAP_OK;};

	/// Web service operation 'GetRecordingOptions' (returns error code or SOAP_OK)
	virtual	int GetRecordingOptions(_trc__GetRecordingOptions *trc__GetRecordingOptions, _trc__GetRecordingOptionsResponse *trc__GetRecordingOptionsResponse){return SOAP_OK;};

	/// Web service operation 'CreateTrack' (returns error code or SOAP_OK)
	virtual	int CreateTrack(_trc__CreateTrack *trc__CreateTrack, _trc__CreateTrackResponse *trc__CreateTrackResponse){return SOAP_OK;};

	/// Web service operation 'DeleteTrack' (returns error code or SOAP_OK)
	virtual	int DeleteTrack(_trc__DeleteTrack *trc__DeleteTrack, _trc__DeleteTrackResponse *trc__DeleteTrackResponse){return SOAP_OK;};

	/// Web service operation 'GetTrackConfiguration' (returns error code or SOAP_OK)
	virtual	int GetTrackConfiguration(_trc__GetTrackConfiguration *trc__GetTrackConfiguration, _trc__GetTrackConfigurationResponse *trc__GetTrackConfigurationResponse){return SOAP_OK;};

	/// Web service operation 'SetTrackConfiguration' (returns error code or SOAP_OK)
	virtual	int SetTrackConfiguration(_trc__SetTrackConfiguration *trc__SetTrackConfiguration, _trc__SetTrackConfigurationResponse *trc__SetTrackConfigurationResponse){return SOAP_OK;};

	/// Web service operation 'CreateRecordingJob' (returns error code or SOAP_OK)
	virtual	int CreateRecordingJob(_trc__CreateRecordingJob *trc__CreateRecordingJob, _trc__CreateRecordingJobResponse *trc__CreateRecordingJobResponse){return SOAP_OK;};

	/// Web service operation 'DeleteRecordingJob' (returns error code or SOAP_OK)
	virtual	int DeleteRecordingJob(_trc__DeleteRecordingJob *trc__DeleteRecordingJob, _trc__DeleteRecordingJobResponse *trc__DeleteRecordingJobResponse){return SOAP_OK;};

	/// Web service operation 'GetRecordingJobs' (returns error code or SOAP_OK)
	virtual	int GetRecordingJobs(_trc__GetRecordingJobs *trc__GetRecordingJobs, _trc__GetRecordingJobsResponse *trc__GetRecordingJobsResponse){return SOAP_OK;};

	/// Web service operation 'SetRecordingJobConfiguration' (returns error code or SOAP_OK)
	virtual	int SetRecordingJobConfiguration(_trc__SetRecordingJobConfiguration *trc__SetRecordingJobConfiguration, _trc__SetRecordingJobConfigurationResponse *trc__SetRecordingJobConfigurationResponse){return SOAP_OK;};

	/// Web service operation 'GetRecordingJobConfiguration' (returns error code or SOAP_OK)
	virtual	int GetRecordingJobConfiguration(_trc__GetRecordingJobConfiguration *trc__GetRecordingJobConfiguration, _trc__GetRecordingJobConfigurationResponse *trc__GetRecordingJobConfigurationResponse){return SOAP_OK;};

	/// Web service operation 'SetRecordingJobMode' (returns error code or SOAP_OK)
	virtual	int SetRecordingJobMode(_trc__SetRecordingJobMode *trc__SetRecordingJobMode, _trc__SetRecordingJobModeResponse *trc__SetRecordingJobModeResponse){return SOAP_OK;};

	/// Web service operation 'GetRecordingJobState' (returns error code or SOAP_OK)
	virtual	int GetRecordingJobState(_trc__GetRecordingJobState *trc__GetRecordingJobState, _trc__GetRecordingJobStateResponse *trc__GetRecordingJobStateResponse){return SOAP_OK;};

	/// Web service operation 'ExportRecordedData' (returns error code or SOAP_OK)
	virtual	int ExportRecordedData(_trc__ExportRecordedData *trc__ExportRecordedData, _trc__ExportRecordedDataResponse *trc__ExportRecordedDataResponse){return SOAP_OK;};

	/// Web service operation 'StopExportRecordedData' (returns error code or SOAP_OK)
	virtual	int StopExportRecordedData(_trc__StopExportRecordedData *trc__StopExportRecordedData, _trc__StopExportRecordedDataResponse *trc__StopExportRecordedDataResponse){return SOAP_OK;};

	/// Web service operation 'GetExportRecordedDataState' (returns error code or SOAP_OK)
	virtual	int GetExportRecordedDataState(_trc__GetExportRecordedDataState *trc__GetExportRecordedDataState, _trc__GetExportRecordedDataStateResponse *trc__GetExportRecordedDataStateResponse){return SOAP_OK;};
};
#endif
